// <auto-generated />
using System;
using API.SharedAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.SharedAPI.Persistence.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20240719105513_InitialApiMigration")]
    partial class InitialApiMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.GroceryList.Models.GroceryItemModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("text")
                        .HasColumnName("itemid");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdat");

                    b.Property<string>("GroceryListId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("grocerylistid");

                    b.Property<string>("GroceryListModelGroceryListId")
                        .HasColumnType("text")
                        .HasColumnName("grocerylistmodelgrocerylistid");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp")
                        .HasColumnName("lastmodified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("picture");

                    b.HasKey("ItemId")
                        .HasName("pk_grocerylistitems");

                    b.HasIndex("GroceryListId")
                        .HasDatabaseName("ix_grocerylistitems_grocerylistid");

                    b.HasIndex("GroceryListModelGroceryListId")
                        .HasDatabaseName("ix_grocerylistitems_grocerylistmodelgrocerylistid");

                    b.ToTable("grocerylistitems", (string)null);
                });

            modelBuilder.Entity("API.GroceryList.Models.GroceryListModel", b =>
                {
                    b.Property<string>("GroceryListId")
                        .HasColumnType("text")
                        .HasColumnName("grocerylistid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdat");

                    b.Property<string>("HousehouldId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("househouldid");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp")
                        .HasColumnName("lastmodified");

                    b.HasKey("GroceryListId")
                        .HasName("pk_grocerylists");

                    b.HasIndex("HousehouldId")
                        .HasDatabaseName("ix_grocerylists_househouldid");

                    b.ToTable("grocerylists", (string)null);
                });

            modelBuilder.Entity("API.Household.Models.HouseholdModel", b =>
                {
                    b.Property<string>("HouseholdId")
                        .HasColumnType("text")
                        .HasColumnName("householdid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdat");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp")
                        .HasColumnName("lastmodified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("HouseholdId")
                        .HasName("pk_households");

                    b.ToTable("households", (string)null);
                });

            modelBuilder.Entity("API.Household.Models.HouseholdUsersModel", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("userid");

                    b.Property<string>("HouseholdId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("householdid");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.HasKey("UserId")
                        .HasName("pk_householdusers");

                    b.ToTable("HouseholdUsers", (string)null);
                });

            modelBuilder.Entity("API.Household.Models.InvitationModel", b =>
                {
                    b.Property<string>("InvitationId")
                        .HasColumnType("text")
                        .HasColumnName("invitationid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdat");

                    b.Property<string>("HouseholdId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("householdid");

                    b.Property<string>("InviteeUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inviteeuserid");

                    b.Property<string>("InviterUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inviteruserid");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp")
                        .HasColumnName("lastmodified");

                    b.HasKey("InvitationId")
                        .HasName("pk_invitations");

                    b.HasIndex("HouseholdId")
                        .HasDatabaseName("ix_invitations_householdid");

                    b.ToTable("invitations", (string)null);
                });

            modelBuilder.Entity("API.GroceryList.Models.GroceryItemModel", b =>
                {
                    b.HasOne("API.GroceryList.Models.GroceryListModel", "GroceryList")
                        .WithMany()
                        .HasForeignKey("GroceryListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_grocerylistitems_grocerylists_grocerylistid");

                    b.HasOne("API.GroceryList.Models.GroceryListModel", null)
                        .WithMany("Items")
                        .HasForeignKey("GroceryListModelGroceryListId")
                        .HasConstraintName("fk_grocerylistitems_grocerylists_grocerylistmodelgrocerylistid");

                    b.Navigation("GroceryList");
                });

            modelBuilder.Entity("API.GroceryList.Models.GroceryListModel", b =>
                {
                    b.HasOne("API.Household.Models.HouseholdModel", "Household")
                        .WithMany()
                        .HasForeignKey("HousehouldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_grocerylists_households_househouldid");

                    b.Navigation("Household");
                });

            modelBuilder.Entity("API.Household.Models.InvitationModel", b =>
                {
                    b.HasOne("API.Household.Models.HouseholdModel", "Household")
                        .WithMany()
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invitations_households_householdid");

                    b.Navigation("Household");
                });

            modelBuilder.Entity("API.GroceryList.Models.GroceryListModel", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
